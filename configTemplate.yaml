DISCORD_BOT:
  #the discord bot token needed to log in
  TOKEN: ""
  #the prefix the bot will answer to
  PREFIX: "."
  #the channel ID where to echo the server console
  CONSOLE_CHANNEL: '796517469224960072'
  #the channel ID where to write and listen to chat messages
  CHAT_CHANNEL: '796519072799653899'
  #webhook url  in chat bridge channel. It sends messages with the minecraft account's username.
  chatBridgeWebHookURL: "https://discord.com/api/webhooks/<webhook id here>/<webhook token here>"


MC_SERVER:
  #The one line command needed to start the Server. For each argument use an element in the list. Please note that cd doesn't work.
  startCMD:
    - "java"
    - "-jar"
    - "-Xmx2G"
    - "-Xms2G"
    - "server.jar"
    - "-nogui"

  #The ip that the status command pings
  realIP: "localhost"
  #The ip that the status command shows.
  #If left empty no name or port will be shown
  showIP: "localhost"
  #The port that players connect to
  pingPort: "25565"
  #The port that `query.port` in server.properties
  queryPort: "25566"

  #Due to oddities with YAML any `: ` or `- ` must have the space escaped. (`:\ ` or `-\ `)
  #for chat bridge
  normalRegexes:
    - regex:
        string: '^\[\d\d:\d\d:\d\d] \[Server thread\/INFO\]:\ ((?:[0-9A-z_]{3,16}) (?:(?:left)|(?:joined)) the game)'
        contentGroup: 1
    - regex:
        string: '^\[\d\d:\d\d:\d\d] \[Server thread\/INFO\]:\ (\* [0-9A-z_]{3,16} .+)'
        contentGroup: 1

  webHookRegexes:
    - regex:
        string: '^\[\d\d:\d\d:\d\d] \[Server thread\/INFO\]:\ <([0-9A-z_]{3,16})> (.+)'
        prefix: ""
        nameGroup: 1
        contentGroup: 2

  #This is the regex for the printed line indicating when the server has been started.
  startRegex: '^\[\d\d:\d\d:\d\d] \[Server thread\/INFO\]: Done \(\d+.\d+s\)! For help, type "help"'


BACKUP:
  #time in seconds between backups ( 0 means disabled)
  backup_time: 1800
  #time after warning before backup
  backup_alert: 30
  #Where to run server and make backups. Needs to be an initialized git repo. A git repo can be initialized by running `git init`.
  gitDirectory: "/server"

  #regex for detecting when the server has let go of the world files.
  gitsavereturnRegex: '^\[\d\d:\d\d:\d\d\] \[Server thread\/INFO\]:\ Saved the game'


#USE IDS HERE
PERMISSIONS:
  Global:
    Roles:
      - "856719355785904158"
    Users:
      - ""
  server:
    Roles:
      - ""
    Users:
      - ""
  status:
    Roles:
      - ""
    Users:
      - ""
  backup:
    Roles:
      - ""
    Users:
      - ""
  chatbridge:
    Roles:
      - ""
    Users:
      - ""
  help:
    Roles:
      - ""
    Users:
      - ""